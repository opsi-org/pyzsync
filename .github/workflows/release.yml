name: Release

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:

jobs:
  build_wheels:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]
        arch: [x86_64, aarch64]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
        include:
          - os: ubuntu-22.04
            arch: x86_64
            rust-target: x86_64-unknown-linux-gnu
            target: linux
          - os: ubuntu-22.04
            arch: aarch64
            rust-target: aarch64-unknown-linux-gnu
            target: linux

          - os: macos-latest
            arch: x86_64
            rust-target: x86_64-apple-darwin
            target: macos
          - os: macos-latest
            arch: aarch64
            rust-target: aarch64-apple-darwin
            target: macos

          - os: windows-latest
            arch: x86_64
            rust-target: x86_64-pc-windows-msvc
            target: windows
          - os: windows-latest
            arch: aarch64
            rust-target: aarch64-pc-windows-msvc
            target: windows

    if: |
      !(matrix.os == 'windows-latest' && matrix.python-version == '3.14') &&
      !(matrix.os == 'windows-latest' && matrix.arch == 'aarch64') &&
      !(matrix.os == 'ubuntu-22.04' && matrix.arch == 'aarch64')

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: ${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --interpreter ${{ matrix.python-version }} --target ${{ matrix.rust-target }}
          rust-toolchain: stable

      - run: ls -lh dist
        if: matrix.target != 'windows'

      - run: dir dist
        if: matrix.target == 'windows'

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.python-version }}
          path: dist

  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out sdist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: sdist

  Release:
    needs: [build_wheels, build_sdist]
    if: success()
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Prepare files
        run: |
          mkdir dist
          cp artifacts/sdist/*.tar.gz dist/
          cp artifacts/wheels*/*.whl dist/
          ls -l dist

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: uv run maturin publish
