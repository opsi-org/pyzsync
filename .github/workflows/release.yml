name: Release

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:

jobs:
  build_wheels:
    strategy:
      fail-fast: true
      matrix:
        os:
          - runner: ubuntu-22.04
            target: linux
          - runner: macos-latest
            target: macos
          - runner: windows-latest
            target: windows
        arch: [x86_64, aarch64]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14.0-rc.1"]

    runs-on: ${{ matrix.os.runner }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: "x64"

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --interpreter ${{ matrix.python-version }}
          rust-toolchain: stable

      - run: ls -lh dist
        if: matrix.os.target == 'linux' || matrix.os.target == 'macos'

      - run: dir dist
        if: matrix.os.target == 'windows'

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os.target }}-${{ matrix.arch }}-${{ matrix.python-version }}
          path: dist

  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  Release:
    needs: [build_wheels, build_sdist]
    if: success()
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: List dist contents
        run: ls -la dist

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        #run: uv publish
        run: uv run maturin publish
